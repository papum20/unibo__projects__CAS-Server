version: '3.7'


x-environment:
  &taiga-default-back-environment
  # These environment variables will be used by taiga-back and taiga-async.
  # Database settings
  POSTGRES_DB: "${TAIGA_POSTGRES_DB}"
  POSTGRES_USER: "${TAIGA_POSTGRES_USER}"
  POSTGRES_PASSWORD: "${TAIGA_POSTGRES_PASSWORD}"
  POSTGRES_HOST: "taiga-db"
  # Taiga settings
  TAIGA_SECRET_KEY: "${TAIGA_SECRET_KEY}"
  TAIGA_SITES_SCHEME: "${TAIGA_SCHEME}"
  TAIGA_SITES_DOMAIN: "${TAIGA_DOMAIN}"
  TAIGA_SUBPATH: "${TAIGA_SUBPATH}"
  # Email settings.
  EMAIL_BACKEND: "django.core.mail.backends.${TAIGA_EMAIL_BACKEND}.EmailBackend"
  DEFAULT_FROM_EMAIL: "${TAIGA_EMAIL_DEFAULT_FROM}"
  EMAIL_USE_TLS: "${TAIGA_EMAIL_USE_TLS}"
  EMAIL_USE_SSL: "${TAIGA_EMAIL_USE_SSL}"
  EMAIL_HOST: "${TAIGA_EMAIL_HOST}"
  EMAIL_PORT: "${TAIGA_EMAIL_PORT}"
  EMAIL_HOST_USER: "${TAIGA_EMAIL_HOST_USER}"
  EMAIL_HOST_PASSWORD: "${TAIGA_EMAIL_HOST_PASSWORD}"
  # Rabbitmq settings
  RABBITMQ_USER: "${TAIGA_RABBITMQ_USER}"
  RABBITMQ_PASS: "${TAIGA_RABBITMQ_PASS}"
  # Telemetry settings
  ENABLE_TELEMETRY: "${TAIGA_ENABLE_TELEMETRY}"
  # ...your customizations go here
  PUBLIC_REGISTER_ENABLED: "True"
  ## to enable http
  SESSION_COOKIE_SECURE: "False"
  CSRF_COOKIE_SECURE: "False"

x-volumes:
  &default-back-volumes
  # These volumens will be used by taiga-back and taiga-async.
  - taiga-static-data:/taiga-back/static
  - taiga-media-data:/taiga-back/media
  # - ./config.py:/taiga-back/settings/config.py



services:

  taiga-db:
    image: postgres:12.3
    container_name: taiga-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${TAIGA_POSTGRES_DB}"
      POSTGRES_USER: "${TAIGA_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${TAIGA_POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TAIGA_POSTGRES_USER}"]
      interval: 2s
      timeout: 15s
      retries: 5
      start_period: 3s
    networks:
      - taiga
    volumes:
      - taiga-db-data:/var/lib/postgresql/data

  taiga-back:
    image: taigaio/taiga-back:latest
    container_name: taiga-back
    environment: *taiga-default-back-environment
    depends_on:
      taiga-db:
        condition: service_healthy
      taiga-events-rabbitmq:
        condition: service_started
      taiga-async-rabbitmq:
        condition: service_started
    networks:
      - default
      - taiga
    volumes: *default-back-volumes

  taiga-async:
    image: taigaio/taiga-back:latest
    container_name: taiga-async
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment: *taiga-default-back-environment
    depends_on:
      taiga-db:
        condition: service_healthy
      taiga-events-rabbitmq:
        condition: service_started
      taiga-async-rabbitmq:
        condition: service_started
    networks:
      - taiga
    volumes: *default-back-volumes

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: taiga-async-rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "${TAIGA_RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${TAIGA_RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${TAIGA_RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${TAIGA_RABBITMQ_VHOST}"
    hostname: "taiga-async-rabbitmq"
    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga

  taiga-front:
    image: taigaio/taiga-front:latest
    container_name: taiga-front
    restart: unless-stopped
    environment:
      URL: "${TAIGA_SCHEME}://${TAIGA_DOMAIN}"
      WEBSOCKETS_URL: "${TAIGA_WEBSOCKETS_SCHEME}://${TAIGA_DOMAIN}"
      SUBPATH: "${TAIGA_SUBPATH}"
      # ...your customizations go here
      PUBLIC_REGISTER_ENABLED: "true"
    networks:
      - default
      - taiga
    # volumes:
    #   - ./conf.json:/usr/share/nginx/html/conf.json

  taiga-events:
    image: taigaio/taiga-events:latest
    container_name: taiga-events
    restart: unless-stopped
    environment:
      RABBITMQ_USER: "${TAIGA_RABBITMQ_USER}"
      RABBITMQ_PASS: "${TAIGA_RABBITMQ_PASS}"
      SECRET_KEY: "${TAIGA_SECRET_KEY}"
    networks:
      - default
      - taiga
    depends_on:
      taiga-events-rabbitmq:
        condition: service_started

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: taiga-rabbit
    restart: unless-stopped
    environment:
      RABBITMQ_ERLANG_COOKIE: "${TAIGA_RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${TAIGA_RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${TAIGA_RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${TAIGA_RABBITMQ_VHOST}"
    hostname: "taiga-events-rabbitmq"
    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga

  taiga-protected:
    image: taigaio/taiga-protected:latest
    container_name: taiga-protected
    environment:
      MAX_AGE: "${TAIGA_ATTACHMENTS_MAX_AGE}"
      SECRET_KEY: "${TAIGA_SECRET_KEY}"
    networks:
      - default
      - taiga


networks:
  taiga:
    name: taiga-network

volumes:
  #taiga dirs
  taiga-static-data:
  taiga-media-data:
  taiga-db-data:
  taiga-async-rabbitmq-data:
  taiga-events-rabbitmq-data: